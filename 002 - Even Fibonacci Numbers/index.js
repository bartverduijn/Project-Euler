/*
	Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.
*/

function fiboEvenSum(n) {
	if (n <= 1) return 0;

	const fibo = [1, 2];
	// Generate Fibonacci sequence as long as the last number is smaller than n
	while (fibo[fibo.length - 1] < n) {
		fibo.push(fibo[fibo.length - 2] + fibo[fibo.length - 1]);
	}
	// Filter and sum even numbers
	return fibo
		.filter(num => num % 2 === 0)
		.reduce((prev, next) => prev + next, 0);
}

console.log(fiboEvenSum(1));
console.log(fiboEvenSum(2));
console.log(fiboEvenSum(8));
console.log(fiboEvenSum(10));
console.log(fiboEvenSum(34));
console.log(fiboEvenSum(60));
console.log(fiboEvenSum(1000));
console.log(fiboEvenSum(100000));
console.log(fiboEvenSum(4000000));
